#!/bin/bash

# Script: fix-makefiles.sh
# Purpose: Fix missing endif in Android.mk files generated by extract-utils
# This is a workaround for extract-utils bug with empty proprietary file lists

echo "================================================"
echo " Fixing Android.mk files (endif issue)"
echo "================================================"

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to fix Android.mk files
fix_android_mk() {
    local mk_file="$1"

    # Check if file has ifeq but no endif
    if grep -q "^ifeq" "$mk_file" && ! grep -q "^endif" "$mk_file"; then
        echo -e "${YELLOW}[FIX]${NC} Adding missing endif to: $mk_file"
        echo "endif" >> "$mk_file"
        return 0
    fi
    return 1
}

# Fix all Android.mk files in vendor directory
fixed_count=0
total_count=0

if [ -d "/home/builder/android/lineage/vendor/samsung" ]; then
    while IFS= read -r -d '' mk_file; do
        total_count=$((total_count + 1))
        if fix_android_mk "$mk_file"; then
            fixed_count=$((fixed_count + 1))
        fi
    done < <(find /home/builder/android/lineage/vendor/samsung -name "Android.mk" -print0)
fi

echo -e "${GREEN}[DONE]${NC} Checked $total_count Android.mk files, fixed $fixed_count"

# Also fix any Android.bp duplicate srcs issue
echo -e "\n${GREEN}[INFO]${NC} Checking Android.bp files for duplicate srcs..."

# This would be more complex to fix automatically,
# but we document the manual fix here
if grep -q "srcs:" /home/builder/android/lineage/vendor/samsung/exynos9820-common/Android.bp 2>/dev/null; then
    echo -e "${YELLOW}[NOTE]${NC} If build fails with 'multiple prebuilt source files',"
    echo "        check Android.bp for duplicate 'srcs:' entries in cc_prebuilt_library_shared blocks"
fi

echo -e "\n${GREEN}[SUCCESS]${NC} Makefile fixes applied!"